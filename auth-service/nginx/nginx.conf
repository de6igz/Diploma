events { }

http {
    # Настройка логов
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 7070;
        server_name localhost;

        # Локация для аутентификации
        location = /auth {
            internal;  # Делаем эту локацию внутренней
            proxy_pass http://auth_service:8082/validate;  # Адрес Auth Service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_body off;  # Не отправляем тело запроса
            proxy_set_header Content-Length "";
        }

        # Основная защищённая локация с удалением префикса
        location /aletheia-collector-service/ {
            auth_request /auth;  # Запрос аутентификации
            auth_request_set $user_id $upstream_http_x_user_id;  # Извлечение user_id из ответа Auth Service
            error_page 401 403 = /403;  # Обработка ошибок аутентификации

            proxy_set_header X-User-Id $user_id;  # Добавление заголовка X-User-Id

            # Убираем /aletheia-collector-service из пути
            rewrite ^/aletheia-collector-service(/.*)$ $1 break;

            proxy_pass http://host.docker.internal:8080;  # Проксирование к Backend Service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Обработка ошибок: возврат только статуса 403 без тела
        location = /403 {
            internal;
            return 403;
        }
    }
}
