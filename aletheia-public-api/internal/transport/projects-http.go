// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"aletheia-public-api/interfaces"

	"github.com/gofiber/fiber/v2"
)

type httpProjects struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverProjects
	base             interfaces.Projects
}

func NewProjects(svcProjects interfaces.Projects) (srv *httpProjects) {

	srv = &httpProjects{
		base: svcProjects,
		svc:  newServerProjects(svcProjects),
	}
	return
}

func (http *httpProjects) Service() *serverProjects {
	return http.svc
}

func (http *httpProjects) WithLog() *httpProjects {
	http.svc.WithLog()
	return http
}

func (http *httpProjects) WithMetrics() *httpProjects {
	http.svc.WithMetrics()
	return http
}

func (http *httpProjects) WithErrorHandler(handler ErrorHandler) *httpProjects {
	http.errorHandler = handler
	return http
}

func (http *httpProjects) SetRoutes(route *fiber.App) {
	route.Get("/v1/projects", http.serveGetProjects)
	route.Get("/v1/project/:projectID", http.serveGetProjectByID)
	route.Delete("/v1/project/:projectID", http.serveDeleteProjectByID)
	route.Post("/v1/project/create", http.serveCreateProject)
	route.Put("/v1/project/:projectID", http.serveUpdateProject)
}
