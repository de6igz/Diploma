// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"aletheia-public-api/interfaces"
	v1 "aletheia-public-api/interfaces/types/v1"
	"context"
)

type ProjectsGetProjects func(ctx context.Context, userId int64) (items v1.ProjectsResponse, err error)
type ProjectsGetProjectByID func(ctx context.Context, projectID string, userId int64) (project v1.ProjectDetailResponse, err error)
type ProjectsDeleteProjectByID func(ctx context.Context, projectID string, userId int64) (status bool, err error)
type ProjectsCreateProject func(ctx context.Context, project *v1.CreateProjectRequest, userId int64) (status bool, err error)
type ProjectsUpdateProject func(ctx context.Context, project *v1.UpdateProjectRequest, projectID string, userId int64) (status bool, err error)

type MiddlewareProjects func(next interfaces.Projects) interfaces.Projects

type MiddlewareProjectsGetProjects func(next ProjectsGetProjects) ProjectsGetProjects
type MiddlewareProjectsGetProjectByID func(next ProjectsGetProjectByID) ProjectsGetProjectByID
type MiddlewareProjectsDeleteProjectByID func(next ProjectsDeleteProjectByID) ProjectsDeleteProjectByID
type MiddlewareProjectsCreateProject func(next ProjectsCreateProject) ProjectsCreateProject
type MiddlewareProjectsUpdateProject func(next ProjectsUpdateProject) ProjectsUpdateProject
